---
# ansible playbook to setup a ubuntu development box
- hosts: test
  #- hosts: 127.0.0.1
  #connection: local

  vars:
    starship_version: '1.11.0'
    username: "{{ ansible_user_id }}"
  
  tasks:
  - name: Setup base
    become: true
    tags: base
    block:
    - name: Install specific git ppa repository
      ansible.builtin.apt_repository:
        repo: ppa:git-core/ppa
        state: present
        filename: git

    - name: Install base packages
      ansible.builtin.apt:
        name: [git, curl, wget, python3-pip, python3-venv, apt-transport-https, ca-certificates, software-properties-common, bzip2, unzip, tree, stow, zsh]
        state: latest


    - name: Setup zsh as default shell for user {{ username }}
      ansible.builtin.user:
        name: "{{ username }}"
        shell: /usr/bin/zsh

  - name: Setup Docker
    become: true
    tags: docker
    when: ansible_facts['distribution_major_version'] | int >= 22 # Should not run on WSL and Ubuntu > 22
    block:
    - name: Add Docker apt key - new method
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 0644
        force: true

    - name: Configure Docker apt repository
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/docker.asc, arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name: 
        - docker-ce
        - docker-ce-cli
        - containerd.io
        state: latest

    - name: Add user {{ username }} to docker group
      ansible.builtin.user:
       name: "{{ username }}"
       append: true
       groups: 
       - docker


  - name: Download and install starship.rs
    become: true
    ansible.builtin.unarchive:
      src: https://github.com/starship/starship/releases/download/v{{ starship_version }}/starship-x86_64-unknown-linux-gnu.tar.gz
      dest: /usr/local/bin
      remote_src: true
      mode: 0755
    tags:
    - base
    - starship
    - zsh

  - name: Setup Dotfiles
    block:
    - name: git checkout dotfiles
      ansible.builtin.git:
        repo: 'https://github.com/pondichys/.dotfiles.git'
        dest: "/home/{{ username }}/.dotfiles"
      tags:
      - dotfiles
    - name: set dotfiles
      ansible.builtin.shell:
        chdir: "/home/{{ username}}/.dotfiles"
        cmd: "for DOT in zsh starship;do stow $DOT; done"
      tags:
      - dotfiles

  - name: install latest distrobox
    become: true
    ansible.builtin.shell:
      cmd: "curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sh"

  - name: rigolith #TODO: modular system version
    tags:
    - rigolith
    become: true
    block:
      - name: apt key
        ansible.builtin.apt_key:
          url: "https://regolith-desktop.org/regolith.key"
          keyring: "/usr/share/keyrings/regolith-archive-keyring.gpg"
      - name: add repo
        ansible.builtin.apt_repository:
          repo: deb [signed-by=/usr/share/keyrings/regolith-archive-keyring.gpg, arch=amd64] https://regolith-desktop.org/release-ubuntu-jammy-amd64 jammy main
          filename: rigolith
          state: present
      - name: install basic rigolith
        ansible.builtin.apt:
          name: [regolith-desktop, "regolith-look-*", i3xrocks-focused-window-name, i3xrocks-rofication, i3xrocks-info, i3xrocks-app-launcher, i3xrocks-memory, i3xrocks-battery]
          state: latest
...
